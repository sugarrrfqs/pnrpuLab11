//Добавить в список элементы с номерами 1, 3, 5 и т. д.

#include <iostream>

using namespace std;

struct list {
  int data;
  list* next;
  list* prev;
};

void createList (int, list*&, list*&);
void printList (list*, int);
void deleteEven (list*);
void addOnOddPosition (list*&, list*&, int&);

int main()
{
  int length = rand()%25+1;
  list* first, *last;
  createList(length, first, last);

  

  printList (first, length);
  cout<<'\n';

  addOnOddPosition (first, last, length);

  printList (first, length);

  return 0;

}

void createList (int length, list*& first, list*& last)
{
  list* p;
  int i;

  first=NULL;
  p=new list;
  p->prev=NULL;
  p->data=rand()%100+1;
  first=p;

  for (i=2;i<=length;i++)
  {
    list* n = new list;
    p->next = n;
    p->next->prev=p;
    p=p->next;
    p->data=rand()%100+1;
    p->next=NULL;
  }

  last=p;
}

void printList(list* first, int length)
{
  list* p = first;
  cout<<"Список длины "<<length<<'\n';
  while (p!=NULL)
  {
    cout<< p->data<<' ';
    p=p->next;
  }
}

void deleteEven (list* first)
{
  list* p = first;

  while (p->next!=NULL)
  {
    if (p->next->data % 2 == 0) 
    {
      p->next=p->next->next;
      break;
    }
    p=p->next;
  }

}

void addOnOddPosition (list*& first, list*& last, int& length)
{
  int i=1, j;
  list* p=first;


  while (i!=length+1)
  {
    if (i%2==1)
    {
      length++;
      list* o=p;
      list* n= new list;
      p=last;
      p->next=n;
      p->next->prev=p;
      p=p->next;
      p->next=NULL;
      last=p;
      j=length;
      
      while (j!=i)
      {
        p->data=p->prev->data;
        p=p->prev;
        j--;
        
      }
      p->data=rand()%100+1;
    }
    p=p->next;
    i++;
  }
}
